To get started with Azure Artifacts, you'll need to create a new project in the DevOps dashboard.

I'm going to create one named 'my-artifacts-example'

Then click on the 'artifacts' link and choose 'connect to feed' button and then select the type of project you wish to push to your Azure Artifacts repository.

I want to push a Node based React app, so I'm going to click on the npm option.

The page will then display information on how to connect a local Node app to the Azure repo.

I need a Node based app to push, so I'm quickly going to create a React app by using the 

npx create-react-app command. I'm going to call my app 'my-scrumtuous-components'

With the project created, you can test the react app by issuing the 'npm start' command. Here you can see it running.

Next, we need to install the software required to connect our React app to the repo.

To do this we simply copy the NPM install command listed in the 'Get the tools' window, and issue it in the root of the project.

You will also notice the project needs a file named .npmrc.

I'll create that with a touch command. Notice the npmrc gets created here.

Copy the registry location into the npmrc file.

Then run the vsts-npm-auth command to have your Azure Artifacts authentication token added to your local environment.

Then run the 'npm install' command to make sure all of the required software is installed correct.

To push the react app to the repo, we can run the 'npm publish' command, although we do need to make one change to our package.json file. We need to change the visibility from private to public.

Then we issue the npm publish command.

And when we come back to Azure Artifacts, you will see that my-scrumtuous-components project has been successfully uploaded.

And that's how you work with Azure Artifacts.








