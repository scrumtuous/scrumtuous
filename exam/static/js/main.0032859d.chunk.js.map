{"version":3,"sources":["logo.svg","Components/Question.js","Components/Timer.js","Components/JumperButton.js","Components/ExamHistory.js","Components/QuestionsPanel.js","Components/QuestionJumperPanel.js","Components/ExamHistoryPanel.js","Components/Exam.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Question","Component","props","_this","Object","classCallCheck","this","_super","call","state","cheating","correctCount","i","question","options","length","correct","getNumberOfCorrectOptions","index","flag","selected","saveQuestionState","e","console","log","disabled","react_default","a","createElement","class","dangerouslySetInnerHTML","__html","answer","graded","_this2","id","query","map","option","highlightAnswer","type","getRadioOrCheckboxType","name","value","checked","isDisabled","onClick","toggleOption","for","text","JumperButton","setCurrentQuestion","indexNumber","getClass","changeQuestion","questions","getAnswer","result","viewed","error","currentQuestionNumber","QuestionsPanel","buttonEnabled","getEnabledOrDisabledButtonState","className","toggleCheat","setFinishButtonState","gradeTheExam","_this3","answerPanel","getCurrentQuestion","JSON","stringify","style","getCheatButton","Components_Question","setPreviousButtonState","previousQuestion","setNextButtonState","nextQuestion","getFinishButton","QuestionJumperPanel","toggleWindow","xmlns","width","height","fill","viewBox","d","Components_JumperButton","toggleMarked","x","document","getElementById","y","display","innerHTML","ExamHistoryPanel","hasError","localStorage","clear","getExamHistory","object","getItem","examHistory","exams","setItem","parse","history","clearLocalStorage","exam","buttons","getButton","unshift","push","info","setState","app","Realm","Exam","bind","assertThisInitialized","showGrade","elapsedTime","Date","currentExam","cheatFlag","page","username","start","getTime","finish","getExamQuestions","_callee","mongodb","message","regenerator_default","wrap","_context","prev","next","logIn","anonymous","sent","currentUser","mongoClient","db","collection","find","stop","position","updatedExamQuestions","isQuestionAnsweredCorrectly","getCorrectCount","removeItem","fetch","method","body","then","res","json","data","_id","toString","newId","$oid","mongoid","catch","jumperPanel","historyPanel","Components_QuestionJumperPanel","Components_ExamHistoryPanel","showResults","Components_QuestionsPanel","React","App","el","getAttribute","Components_Exam","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.0032859d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { Component } from 'react';\r\n \r\nclass Question extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t  cheating: false,\r\n\t\t};\r\n    }   \r\n\t\r\n\tgetNumberOfCorrectOptions() {\r\n\t\tlet correctCount = 0;\r\n        let i = 0;\r\n\t\tfor (i = 0; i < this.props.question.options.length; i++) {\r\n           if (this.props.question.options[i].correct) {\r\n\t\t\t correctCount++;\r\n\t\t   }\r\n\t\t}\r\n\t\treturn correctCount;\r\n\t}\r\n\t\r\n\t\r\n\tgetRadioOrCheckboxType() {\r\n\t\tif (this.getNumberOfCorrectOptions() > 1 ) {\r\n\t\t\treturn \"checkbox\";\r\n\t\t}\r\n\t\treturn \"checkbox\";\r\n\t}\r\n\t\r\n\t\r\n\ttoggleOption(index) {\r\n      try{\r\n         var flag = this.props.question.options[index].selected;\r\n         this.props.question.options[index].selected = !flag;\r\n         this.props.saveQuestionState(this.props.question);\r\n      } catch(e){\r\n         console.log(e);\r\n      }\r\n\t}\r\n\t\r\n\tisAnsweredCorrectly() {\r\n\t\tlet correctCount = 0;\r\n        let i = 0;\r\n\t\tfor (i = 0; i < this.props.question.options.length; i++) {\r\n           if ( (this.props.question.options[i].correct) != (this.props.question.options[i].selected) ) {\r\n\t\t\t return \"false\";\r\n\t\t   }\r\n\t\t}\r\n\t\treturn \"true\";\r\n\t}\r\n\t\r\n\tisDisabled() {\r\n\t\tif (this.props.disabled==true) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tgetAnswer() {\r\n\t\treturn ( <div class=\"btn-warning\"  dangerouslySetInnerHTML={{__html: this.props.question.answer}} /> );\r\n\t}\r\n\t\r\n\thighlightAnswer(index) {\r\n\t\tconsole.log(this.props.graded);\r\n\t\tif (this.props.cheating || this.props.disabled) {\r\n\t\t\tconsole.log(\"We are cheating or it is graded.\");\r\n\t\t\tif (this.props.question.options[index].correct) {\r\n\t\t\t\tconsole.log(\"The option is correct.\")\r\n\t\t\t\treturn \" border border-success \";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\t\r\n    render(){\r\n        return (\r\n\r\n\t\t\t<div class=\"card-body\">\r\n\r\n\t\t\t   <h3 class=\"card-title\" id=\"query\"> \r\n\t\t\t\t  {this.props.question.query} <small>(Choose {this.getNumberOfCorrectOptions()})</small>\r\n\t\t\t   </h3>\r\n\t\t\t   \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.question.options.map((option, index)=>\r\n\t\t\t\t\t   <div class={\"form-check my-2 \"+this.highlightAnswer(index)}  id={\"outerOptionDiv\" + index}>\r\n\t\t\t\t\t\t  <input class=\"form-check-input  option-radio \" type={this.getRadioOrCheckboxType()} name=\"optionRadios\" id={\"option\" + index} value={\"option\"  + index}\r\n\t\t\t\t\t\t\t checked={this.props.question.options[index].selected} \r\n\t\t\t\t\t\t\t disabled={this.isDisabled()}\r\n\t\t\t\t\t\t\t onClick={() => this.toggleOption(index)} \r\n\t\t\t\t\t\t  ></input>\r\n\t\t\t\t\t\t  <label class=\"form-check-label\" for={\"option\"  + index} id={\"labelOption\" + index}>\r\n\t\t\t\t\t\t  {this.props.question.options[index].text}\r\n\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t   </div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t \r\n\t\t\t</div>\r\n           \r\n            \r\n        )\r\n    }\r\n}\r\n \r\nexport default Question;","import React, { Component } from 'react';\r\n\r\nclass Timer extends Component{\r\n    render(){\r\n        return (\r\n            <>\r\n                <button id=\"timer\" class=\"btn btn-secondary\">05:00</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;","import React, { Component } from 'react';\r\n\r\nclass JumperButton extends Component{\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n    }\r\n\t\r\n\tchangeQuestion() {\r\n\t\tthis.props.setCurrentQuestion( this.props.indexNumber );\r\n\t}\r\n\t\r\n    render(){\r\n        return (\r\n\t\t\t<span>\r\n\t\t\t\t<button id=\"btn{this.props.questionNumber}\" type=\"button\" class={this.getClass()} onClick={() => this.changeQuestion()}>\r\n\t\t\t\t{this.props.indexNumber + 1}{console.log(this.props.questions[this.props.indexNumber].getAnswer)}\r\n\t\t\t\t</button>\r\n\t\t\t\t&nbsp;\r\n\t\t\t</span>\r\n        )\r\n    }\r\n\t\r\n\tgetClass(){\r\n\t\t//var question = this.props.\r\n\t\tvar result = 'btn btn-light btn-sm';\r\n\t\ttry {\r\n\r\n\t\tif (this.props.questions[this.props.indexNumber].viewed) {\r\n\t\t\tresult = 'btn btn-secondary btn-sm';\r\n\t\t\t//console.log(\"The question has been viweed\");\r\n\t\t}\r\n\t\t} catch (error) {\r\n  console.error(error);\r\n  // expected output: ReferenceError: nonExistentFunction is not defined\r\n  // Note - error messages will vary depending on browser\r\n}\r\n\t    if ([this.props.indexNumber] == this.props.currentQuestionNumber) {\r\n\t\t\tresult = 'btn btn-primary btn-sm';\r\n\t\t\t//console.log(\"Current Questions\");\r\n\r\n\t\t}\r\n\t\t \r\n\t\t \r\n\r\n\t\tlet correctCount = 0;\r\n        let i = 0;\r\n\t\tlet correct = true;\r\n\t\tfor (i = 0; i < this.props.question.options.length; i++) {\r\n           if ( (this.props.question.options[i].correct) != (this.props.question.options[i].selected) ) {\r\n\t\t\t correct = false;\r\n\t\t   }\r\n\t\t}\r\n\t\t//console.log(\"Cheating value in jumper: \" + this.props.cheating );\r\n\t\tif (this.props.cheating || this.props.graded ) {\r\n\t\t\tif (!correct) {\r\n\t\t\t\tresult = 'btn btn-danger btn-sm';\r\n\t\t\t}\r\n\t\t\tif (correct){\r\n\t\t\t\tresult = 'btn btn-success btn-sm';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t\r\n} \r\n\r\nexport default JumperButton;\r\n\r\n\r\n/*\r\n  createJumperButtons(){\r\n   document.getElementById(\"questionJumper\").innerHTML = \"\";\r\n   var questionsLength = this.state.questions.length;\r\n     for(var i = 0; i < questionsLength; i++){\r\n         var button = document.createElement(\"button\");\r\n         button.appendChild(document.createTextNode(i+1));\r\n         button.setAttribute(\"id\", \"btn\"+i);\r\n         button.setAttribute(\"type\", \"button\");\r\n         button.setAttribute(\"class\", \"btn btn-secondary btn-sm\");\r\n         if(i == this.state.currentQuestionNumber){\r\n            button.setAttribute(\"class\", \"btn btn-primary btn-sm\");\r\n         }\r\n         document.getElementById(\"questionJumper\").appendChild(button);\r\n         document.getElementById(\"questionJumper\").appendChild(document.createTextNode(\"\\u00A0\"));//nbsp\r\n     }\r\n\r\n     for(let x = 0; x < questionsLength; x++){\r\n         var elem = document.getElementById(\"btn\"+x);\r\n         elem.addEventListener(\"click\", () => { this.clickJumperButton(x); });\r\n     }\r\n  }\r\n\r\n  clickJumperButton(x){\r\n\r\n   //this.updateTimeSpent();\r\n   //this.setState({time:0});\r\n   this.setCurrentQuestion(x);\r\n  \r\n  }\r\n\r\n\r\n*/","import React, { Component } from 'react';\r\n \r\nclass ExamHistory extends Component{\r\n \r\n\t\r\n\t\r\n    render(){\r\n        return (\r\n   <div class=\"card-header\" id=\"localStorageTitle\">\r\n      Local Storage\r\n\r\n<div class=\"card mt-2\">\r\n   </div>\r\n   <div class=\"card-body\">\r\n      <h3 class=\"card-title\" id=\"localStorageCardTitle\">What's in Storage?</h3>\r\n      <p>Number of exams in your history: {this.getExamHistory().length} </p>\r\n      <button id=\"clearls\" class=\"btn btn-primary\" type=\"submit\"\r\n         onClick={() => this.clearLocalStorage()}\r\n      >Clear Local Storage</button>&nbsp;\r\n\r\n\r\n\t  \t  \t\t\t\t<button id=\"formatToTable\" className=\"btn btn-primary\" type=\"submit\" onClick={() => this.formatToTable()}>Format to Table</button>&nbsp;\r\n\t\t\t\t\t\t\r\n\t  \t\t\t\t<button className=\"btn btn-primary\" type=\"submit\" onClick={() => this.formatToCode()}>Format to Code</button>\r\n\t  \r\n      <div>\r\n         <pre id=\"examHistory\" key={Math.random()}> { JSON.stringify(this.getExamHistory(), \"\", \"\\t\") } </pre>\r\n      </div>\r\n      <p class=\"card-text\">\r\n      </p>\r\n   </div>\r\n</div>\r\n           \r\n            \r\n        )\r\n    }\r\n\t\r\n\tgetExamHistory() {\r\n\t\t//alert(\"Get Exam History\");\r\n      try{\r\n         let object = localStorage.getItem('examHistory');\r\n         let examHistory = \"\";\r\n         \r\n         if (object == null) {\r\n            examHistory = {name:\"Exam History\"};\r\n            let exams = [];\r\n            examHistory.exams = exams;\r\n            localStorage.setItem('examHistory', JSON.stringify(examHistory));\r\n            //this.setState({history: examHistory})\r\n         } else {\r\n            examHistory = JSON.parse(object);\r\n         }\r\n         return examHistory;\r\n      }catch(e){\r\n         console.log(e);\r\n      }\r\n\t\t\r\n\t}\r\n\t\r\n\tclearLocalStorage() {\r\n\t\tlocalStorage.clear('examHistory');\r\n\t\tthis.setState({history: this.getExamHistory()});\r\n      document.getElementById(\"formatToTable\").setAttribute(\"class\", \"enabled btn btn-primary\");\r\n      document.getElementById(\"formatToCode\").setAttribute(\"class\", \"disabled btn btn-primary\");\r\n\t}\r\n\r\n   formatToCode() {\r\n      document.getElementById(\"formatToTable\").setAttribute(\"class\", \"enabled btn btn-primary\");\r\n      document.getElementById(\"formatToCode\").setAttribute(\"class\", \"disabled btn btn-primary\");\r\n      document.getElementById(\"examHistory\").innerHTML = JSON.stringify(this.getExamHistory(), \"\", \"\\t\");\r\n   }\r\n\r\n   formatToTable() {\r\n      document.getElementById(\"formatToTable\").setAttribute(\"class\", \"disabled btn btn-primary\");\r\n      document.getElementById(\"formatToCode\").setAttribute(\"class\", \"enabled btn btn-primary\");\r\n      var examHistory = this.getExamHistory();\r\n      \r\n         document.getElementById(\"examHistory\").innerHTML = \"\";\r\n         var table = document.createElement(\"table\");\r\n         table.setAttribute(\"id\", \"tablestyle\");\r\n         var tr = document.createElement(\"tr\");\r\n         var headers = [\"Exam number\", \"Question\", \"Options Given\", \"Correct Options\", \"Selected Options\"];\r\n         for (var i = 0; i < headers.length; i++) {\r\n            var th = document.createElement(\"th\");\r\n            th.appendChild(document.createTextNode(headers[i]));\r\n            tr.appendChild(th);\r\n         }\r\n         table.appendChild(tr);\r\n\r\n         if(examHistory.exams.length < 1){\r\n            tr = document.createElement(\"tr\");\r\n            td = document.createElement(\"td\");\r\n            td.setAttribute(\"colspan\", \"5\");\r\n            td.setAttribute(\"style\", \"text-align: center\");\r\n            td.appendChild(document.createTextNode(\"**Nothing to show**\"));\r\n            tr.appendChild(td);\r\n            table.appendChild(tr); \r\n         }\r\n         for (var counter = 0; counter < examHistory.exams.length; counter++) { //per exam\r\n            console.log(\"Exam History: \" + (counter + 1));\r\n            tr = document.createElement(\"tr\");\r\n            var td = document.createElement(\"td\"); //Start of Exam Number\r\n            td.appendChild(document.createTextNode(\"Exam History: \" + (counter + 1))); \r\n            tr.appendChild(td);\r\n            table.appendChild(tr);//End of Exam Number\r\n            for (var q = 0; q < examHistory.exams[counter].length; q++) { //per question\r\n               var question = examHistory.exams[counter][q].query;\r\n               var correctOptions = [];\r\n               var selectedOptions = [];\r\n               var optionsGiven = [];\r\n               var options = examHistory.exams[counter][q].options;\r\n               var isCorrect = true;\r\n               console.log(JSON.stringify(question));\r\n               for (var opt = 0; opt < options.length; opt++) { //selected and correct options gathering\r\n                  if (examHistory.exams[counter][q].options[opt].correct) {\r\n                     correctOptions.push(examHistory.exams[counter][q].options[opt].text);\r\n                  }\r\n                  if (examHistory.exams[counter][q].options[opt].selected) {\r\n                     selectedOptions.push(examHistory.exams[counter][q].options[opt].text);\r\n                  }\r\n                  optionsGiven.push(examHistory.exams[counter][q].options[opt].text);\r\n               }\r\n   \r\n               tr = document.createElement(\"tr\");\r\n               tr.appendChild(document.createElement(\"td\")); //for blank td\r\n               \r\n               td = document.createElement(\"td\");\r\n               td.appendChild(document.createTextNode(question));\r\n               tr.appendChild(td);\r\n   \r\n               td = document.createElement(\"td\");\r\n               var p = document.createElement(\"p\");\r\n               p.appendChild(document.createTextNode(\"Given Options:\"));\r\n               td.appendChild(p);\r\n               var ul = document.createElement(\"ul\");\r\n               for (opt = 0; opt < optionsGiven.length; opt++) {\r\n                  var li = document.createElement(\"li\");\r\n                  li.setAttribute(\"style\", \"margin-left: 40px\");\r\n                  li.appendChild(document.createTextNode(optionsGiven[opt]));\r\n                  td.appendChild(li);\r\n               }\r\n               tr.appendChild(td);\r\n   \r\n               td = document.createElement(\"td\");\r\n               p = document.createElement(\"p\");\r\n               p.appendChild(document.createTextNode(\"Correct Options:\"));\r\n               td.appendChild(p);\r\n               for (opt = 0; opt < correctOptions.length; opt++) {\r\n                  var li = document.createElement(\"li\");\r\n                  li.setAttribute(\"style\", \"margin-left: 40px\");\r\n                  li.appendChild(document.createTextNode(correctOptions[opt]));\r\n                  td.appendChild(li);\r\n               }\r\n               tr.appendChild(td);\r\n   \r\n               td = document.createElement(\"td\");\r\n               p = document.createElement(\"p\");\r\n               p.appendChild(document.createTextNode(\"Selected Options:\"));\r\n               td.appendChild(p);\r\n               for (opt = 0; opt < selectedOptions.length; opt++) {\r\n                  var li = document.createElement(\"li\");\r\n                  li.setAttribute(\"style\", \"margin-left: 40px\");\r\n                  li.appendChild(document.createTextNode(selectedOptions[opt]));\r\n                  td.appendChild(li);\r\n               }\r\n               tr.appendChild(td);\r\n   \r\n               console.log(\"-------correct: \" + correctOptions.toString());\r\n               console.log(\"-------selected: \" + selectedOptions.toString());\r\n   \r\n               if (selectedOptions.length < 1) { //check if the user answered the question\r\n                  isCorrect = false;\r\n               } else {\r\n                  for (i = 0; i < selectedOptions.length; i++) { //decision if the answer is correct\r\n                     var selected = selectedOptions[i];\r\n                     if (!correctOptions.includes(selected)) {\r\n                        isCorrect = false;\r\n                     }\r\n                  }\r\n               }\r\n   \r\n               if (isCorrect) {\r\n                  console.log(\"-------You are correct\");\r\n                  tr.setAttribute(\"style\", \"background-color:#ccffcc\");\r\n               } else {\r\n                  tr.setAttribute(\"style\", \"background-color:#ff6666\");\r\n                  console.log(\"-------You are wrong\");\r\n               }\r\n   \r\n               table.appendChild(tr);\r\n   \r\n            }\r\n   \r\n         }\r\n         document.getElementById(\"examHistory\").appendChild(document.createElement(\"br\"));\r\n         document.getElementById(\"examHistory\").appendChild(table);\r\n      \r\n      \r\n   }\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n \r\n \r\n \r\n \r\n \r\nexport default ExamHistory;","import React, { Component } from 'react';\r\nimport Question from './Question';\r\n\r\nclass QuestionsPanel extends Component{\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n    } \r\n\t\r\n\tisQuestionAnsweredCorrectly(question) {\r\n        let i = 0;\r\n\t\tfor (i = 0; i < question.options.length; i++) {\r\n\t\t\t\r\n           if ( (question.options[i].correct) !== (question.options[i].selected) ) {\r\n\t\t\t return false;\r\n\t\t   }\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tgetCurrentQuestion() {\r\n\t\t\r\n\r\n\t\ttry {\r\n\t\t\tif (this.props.questions==null) {\r\n\t\t\t\tconsole.log(\"Questions are null.\");\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.props.questions[this.props.currentQuestionNumber];\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t  console.error(\"Error trying to return current question\" + error);\r\n\t\t  return null;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t};\r\n\r\n\r\n\t//toggleQuestions() {\r\n\t//\tthis.props.toggleQuestion();\r\n\t//};\r\n\r\n\t//toggleCheat() {\r\n\t\t\r\n\t//\tconsole.log(\"toggle cheat\");\r\n\t//\tconsole.log(\"Value of cheating: \" + this.props.cheating);\r\n\t\t//this.setState({cheating: !this.state.cheating});\r\n\t//\tthis.props.toggleCheat();\r\n\t//};\r\n\t\r\n\tchangeQuestion() {\r\n\t\tthis.props.setCurrentQuestion( this.props.indexNumber)\r\n\t}\r\n\t\r\n\tnextQuestion() {\r\n\t  this.props.setCurrentQuestion(this.props.currentQuestionNumber + 1);\r\n\t}\r\n\t\r\n    previousQuestion() {\r\n\t  this.props.setCurrentQuestion(this.props.currentQuestionNumber - 1);\r\n\t}\r\n\r\n\t\r\n   getEnabledOrDisabledButtonState(flag) {\r\n\tif(flag){\r\n      return \" enabled btn btn-primary \";\r\n    } else {\r\n\t  return \" disabled btn btn-primary \";\r\n\t}  \r\n   }\r\n\r\n   \r\n   setPreviousButtonState() {\r\n\t   let buttonEnabled = this.props.currentQuestionNumber > 0;\r\n\t   return this.getEnabledOrDisabledButtonState(buttonEnabled);\r\n   }\r\n   \r\n   setNextButtonState() {\r\n\tlet buttonEnabled = this.props.currentQuestionNumber < this.props.questions.length-1;\r\n\treturn this.getEnabledOrDisabledButtonState(buttonEnabled);\r\n   }\r\n   \r\n   setFinishButtonState() {\r\n\t   let buttonEnabled = !this.props.graded;\r\n\t   return this.getEnabledOrDisabledButtonState(buttonEnabled);\r\n   }\r\n   \r\n   getCheatButton() {\r\n\t   if(!this.props.disabled){\r\n\t   \t  return <a id=\"cheat\" className={(this.props.cheating ? 'enabled btn btn-warning' : 'enabled btn btn-warning')}  onClick={() => this.props.toggleCheat()}>{(this.props.cheating ? 'Be Honest' : 'Cheat')}</a>;\r\n\t   }\r\n   }\r\n   \r\n   getFinishButton() {\r\n\t   \r\n\t   if(!this.props.disabled){\r\n\t   \t  return <a id=\"finish\" className={this.setFinishButtonState()} onClick={() => this.props.gradeTheExam()}>Finish</a>;\r\n\t   }\r\n\t   \r\n\t   \t\t\t\t\t\t\r\n   }\r\n   \r\n    render(){\r\n\t\t\r\n\t\tlet answerPanel = null;\r\n\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (this.getCurrentQuestion() == null ) {\r\n\t\t\treturn <div class=\"card  mt-3\">\r\n  <div class=\"card-header d-flex justify-content-between\" id=\"questionNumber\">Loading...<a id=\"cheat\" class=\" enabled btn btn-warning \">Cheat</a></div>\r\n  <div class=\"card-body\">\r\n    <div class=\"card-body\">\r\n\tLoading...\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\t\t} else {\r\n\t\t\t\r\n\t\tconsole.log(\"The current question: \" + JSON.stringify(this.getCurrentQuestion()));\r\n\t\tlet question = this.getCurrentQuestion();\r\n\t\tconsole.log(question.query);\r\n\t\tif (this.props.cheating===true) {\r\n\t\t\r\n\t\tanswerPanel = \r\n\t\t\r\n\t\t\t<div className=\"card  mt-3\">\r\n\t\t\t   <div className=\"card-header d-flex justify-content-between\"  id=\"questionNumber\">\r\n\t\t\t\t  Answer\r\n\t\t\t   </div>\r\n\t\t\t   <div className=\"card-body\">\r\n\t\t\t   \t\t\t\t  \r\n\t\t\t\t  <div className=\"card-text    d-flex justify-content-between \">\r\n\t\t\t\t\t<span dangerouslySetInnerHTML={{__html: question.answer}}></span>\t\t\t\t\t  \r\n\t\t\t\t  </div>\r\n\t\t\t   </div>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n        return (\r\n\r\n<span style=\"width:100%\">\r\n\t\t\t<div className=\"card  mt-3\">\r\n\t\t\t   <div className=\"card-header d-flex justify-content-between\" id=\"questionNumber\">\r\n\t\t\t\t  Question {this.props.currentQuestionNumber + 1}\r\n\t\t\t\t\t  {this.getCheatButton()}\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t   </div>\r\n\t\t\t   <div className=\"card-body\">\r\n\t\t\t   \r\n\t\t\t\t  <Question saveQuestionState = {this.props.saveQuestionState} question={ this.getCurrentQuestion()} disabled={this.props.disabled} cheating={this.props.cheating}/>\r\n\t\t\t\t  \r\n\t\t\t\t  <div className=\"card-text mt-3   d-flex justify-content-between \">\r\n\t\t\t\t\t \r\n<span>\r\n\t\t\t\t\t\t<a id=\"previous\" className={this.setPreviousButtonState()} onClick={() => this.previousQuestion()}>&lt;&lt; Back</a>&nbsp;\r\n\t\t\t\t\t\t<a id=\"next\" className={this.setNextButtonState()} onClick={() => this.nextQuestion()}>Next &gt;&gt;</a> &nbsp;\r\n</span>\r\n<span>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{this.getFinishButton()}\r\n\r\n\r\n</span>\t\t\t\t\t  \r\n\t\t\t\t\t \r\n\t\t\t\t  </div>\r\n\t\t\t   </div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\r\n\r\n\t\t\t{answerPanel}\t\t\r\n\t\t\t\r\n</span>\t\t\t\r\n\t\t\t\r\n\r\n        )\r\n    }\r\n} \r\n\r\nexport default QuestionsPanel;\r\n\r\n","import React, { Component } from 'react';\r\nimport Question from './Question';\r\nimport JumperButton from './JumperButton';\r\n\r\nclass QuestionJumperPanel extends Component{\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n    }\r\n\t\r\n\tgetCurrentQuestion() {\r\n\t\t\r\n\r\n\t\ttry {\r\n\t\t\tif (this.props.questions==null) {\r\n\t\t\t\tconsole.log(\"Questions are null.\");\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.props.questions[this.props.currentQuestionNumber];\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t  console.error(\"Error trying to return current question\" + error);\r\n\t\t  return null;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n    render(){\r\n\t\tif (this.getCurrentQuestion() == null ) {\r\n\t\t\treturn <div class=\"card  mt-3\">\r\n  <div class=\"card-header d-flex justify-content-between\" id=\"questionNumber\">Loading...<a id=\"cheat\" class=\" enabled btn btn-warning \">Cheat</a></div>\r\n  <div class=\"card-body\">\r\n    <div class=\"card-body\">\r\n\tLoading...\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\t\t}\r\n\t\t\r\n\t\t\r\n        return (\r\n\r\n\t\t\t<div class=\"card  mt-3 mb-3 \">\r\n\t\t\t   <div class=\"card-header d-flex justify-content-between align-items-center\" id=\"questionJumperTitle\" onClick={() => this.toggleWindow()}>\r\n\r\n  Question Jumper\r\n<svg id=\"caret\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-up\" viewBox=\"0 0 16 16\">\r\n<path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\"/>\r\n</svg>\r\n\r\n\r\n\t\t\t  \r\n\r\n\r\n\r\n\t\t\t   </div>\r\n\t\t\t   <div id=\"jumper-card-body\" class=\"card-body\">\r\n\t\t\t\t  <p class=\"card-text\"></p>\r\n\t\t\t\t  <div id=\"questionJumper\">\r\n\t\t\t\t  {\r\n\t\t\t\t\t  this.props.questions.map((value, index) => { \r\n\t\t\t\t\t\treturn <JumperButton \r\n\t\t\t\t\t\tindexNumber={index} \r\n\t\t\t\t\t\tsetCurrentQuestion={this.props.setCurrentQuestion} \r\n\t\t\t\t\t\tquestions={this.props.questions}\r\n\t\t\t\t\t\tquestion={this.props.questions[index]}\r\n\t\t\t\t\t\tcurrentQuestionNumber = {this.props.currentQuestionNumber} \r\n\t\t\t\t\t\tcheating={this.props.cheating}\r\n\t\t\t\t\t\tgraded={this.props.graded}\r\n\t\t\t\t\t\ttoggleMarked={this.props.toggleMarked}\r\n\t\t\t\t\t\t></JumperButton>\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t)\r\n\t\t\t\t  }\r\n\t\t\t\t  </div>\r\n\t\t\t   </div>\r\n\t\t\t</div>\r\n\r\n        )\r\n    }\r\n\r\n\ttoggleWindow() {\r\n\r\n\t\r\nvar x = document.getElementById(\"jumper-card-body\");\r\nvar y = document.getElementById(\"caret\");\r\n\r\n  if (x.style.display === \"none\") {\r\n    x.style.display = \"block\";\r\n\ty.innerHTML = '<path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\"/>';\r\n  } else {\r\n    x.style.display = \"none\";\r\n\ty.innerHTML = '<path d=\"M3.204 11h9.592L8 5.519 3.204 11zm-.753-.659 4.796-5.48a1 1 0 0 1 1.506 0l4.796 5.48c.566.647.106 1.659-.753 1.659H3.204a1 1 0 0 1-.753-1.659z\"/>';\r\n\r\n  }\r\n} \r\n\r\n}\r\n\r\n\r\n\r\nexport default QuestionJumperPanel;\r\n\r\n","import React, { Component } from 'react';\r\nimport Question from './Question';\r\nimport HistoryButton from './JumperButton';\r\n\r\nclass ExamHistoryPanel extends Component{\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\tthis.state = { hasError: false };\r\n\t\t//let history = JSON.parse(localStorage.getItem('examHistory'));\r\n    }\r\n\t\r\n\t\r\n\tclearLocalStorage() {\r\n\t\tlocalStorage.clear('examHistory');\r\n\t\tthis.getExamHistory();\r\n\t}\r\n\t\r\n\tgetExamHistory() {\r\n\t\t//console.log(\"In EHP getExamHistory\");\r\n      try{\r\n         let object = localStorage.getItem('examHistory');\r\n         let examHistory = \"\";\r\n         if (object == null) {\r\n            examHistory = {name:\"Exam History\"};\r\n            let exams = [];\r\n            examHistory.exams = exams;\r\n            localStorage.setItem('examHistory', JSON.stringify(examHistory));\r\n         } else {\r\n            examHistory = JSON.parse(object);\r\n\t\t\t\r\n         }\r\n         return examHistory;\r\n      }catch(e){\r\n         console.log(e);\r\n      }\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n    render(){\r\n\tconsole.log(\"In ExamHistoryPanel render\");\r\n\t\r\n\tconsole.log(this.getExamHistory());\r\n\tconsole.log(this.getExamHistory().exams);\r\n\t\r\n\tlet history = this.getExamHistory();\r\n\t\t\r\n\tif (history == null ) {\r\n\t\treturn <span>No Exam History</span>;\r\n\t}\r\n\t\r\n\tif (history.exams == null ) {\r\n\t\treturn <span>No Exams</span>;\r\n\t}\r\n\tif (history.exams.length == 0 ) {\r\n\t\treturn <span></span>;\r\n\t}\r\n\t\r\n\t\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n        return (\r\n\r\n\t\t\t<div class=\"card  mt-3 mb-3 \">\r\n\t\t\t   <div class=\"card-header d-flex justify-content-between align-items-center\" id=\"questionJumperTitle\" onClick={() => this.toggleWindow()}>\r\n\r\n  <span>Exam History &nbsp;\r\n  \r\n  <a id=\"clearls\" class=\"\" type=\"submit\"\r\n         onClick={() => this.clearLocalStorage()}\r\n      >Clear History</a></span>\r\n  \r\n  \r\n<svg id=\"history-caret\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-up\" viewBox=\"0 0 16 16\">\r\n<path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\"/>\r\n</svg>\r\n\r\n\r\n\t\t\t   </div>\r\n\t\t\t   <div id=\"history-card-body\" class=\"card-body\">\r\n\t\t\t\t  <p class=\"card-text\"></p>\r\n\t\t\t\t  \r\n\t\t\t\t  {\r\n\r\n\t\t\t\t  \r\n\t\t\t\t  }\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t  <div id=\"historyJumper\">\r\n\t\t\t\t  {\r\n\t\t\t\t\r\n\r\n\t\t\t\t\tthis.getExamHistory().exams.map((exam, i) => {\r\n\t\t\t\t\t  //console.log(\"Outsideeee\"+i);\r\n\r\n\t\t\t\t\t  let buttons = exam.questions.map((value, index) => { \r\n\t\t\t\t\t\t\t//console.log(\"Inside\"+index + \" \" + value.query);\r\n\t\t\t\t\t\t\treturn \t <span>{this.getButton(value)}</span>\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t   //console.log(\"Here are the buttons: \" + buttons);\r\n\t\t\t\t\t\tbuttons.unshift(<br/> );\r\n\t\t\t\t\t\tbuttons.unshift(exam.name );\r\n\t\t\t\t\t\tbuttons.push(<hr/>);\r\n\t\t\t\t\t  return buttons;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t)\t  \r\n\t\t\t\t\t\t\t\t  \r\n\r\n\t\t\t\t  }\r\n\t\t\t\t  </div>\r\n\t\t\t   </div>\r\n\t\t\t</div>\r\n\r\n        )\r\n    }\r\n\t\r\n  componentDidCatch(error, info) {\r\n    // Display fallback UI\r\n    this.setState({ hasError: true });\r\n    // You can also log the error to an error reporting service\r\n    //console.log(error);\r\n\t//console.log(info);\r\n  }\r\n\r\ngetButton(question) {\r\n\r\nvar result = 'btn btn-warning btn-sm';\r\n\t\tlet correctCount = 0;\r\n        let i = 0;\r\n\t\tlet correct = true;\r\n\t\tfor (i = 0; i < question.options.length; i++) {\r\n           if ( (question.options[i].correct) != (question.options[i].selected) ) {\r\n\t\t\t correct = false;\r\n\t\t   }\r\n\t\t}\r\n\t\t//console.log(\"Cheating value in jumper: \" + this.props.cheating );\r\n\r\n\t\tif (!correct) {\r\n\t\t\tresult = <span>\r\n<button class='btn btn-info'>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-square\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n  <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n</svg>\r\n</button>\r\n&nbsp;\r\n\r\n</span>;\r\n\t\t}\r\n\t\tif (correct){\r\n\t\t\tresult = <span>\r\n<button class='btn btn-primary'>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-square\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n  <path d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.235.235 0 0 1 .02-.022z\"/>\r\n</svg>\r\n</button>&nbsp;</span>;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n}\r\n\r\n\tgetClass(question){\r\n\t\t//console.log(\"In getClass with question: \" + question.query);\r\n\t\tvar result = 'btn btn-warning btn-sm';\r\n\r\n\t\t \r\n\t\t \r\n\r\n\t\tlet correctCount = 0;\r\n        let i = 0;\r\n\t\tlet correct = true;\r\n\t\tfor (i = 0; i < question.options.length; i++) {\r\n           if ( (question.options[i].correct) != (question.options[i].selected) ) {\r\n\t\t\t correct = false;\r\n\t\t   }\r\n\t\t}\r\n\t\t//console.log(\"Cheating value in jumper: \" + this.props.cheating );\r\n\r\n\t\tif (!correct) {\r\n\t\t\tresult = 'btn btn-danger btn-sm';\r\n\t\t}\r\n\t\tif (correct){\r\n\t\t\tresult = 'btn btn-info btn-sm';\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\ttoggleWindow() {\r\n\r\n\t\r\nvar x = document.getElementById(\"history-card-body\");\r\nvar y = document.getElementById(\"history-caret\");\r\n\r\n  if (x.style.display === \"none\") {\r\n    x.style.display = \"block\";\r\n\ty.innerHTML = '<path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\"/>';\r\n  } else {\r\n    x.style.display = \"none\";\r\n\ty.innerHTML = '<path d=\"M3.204 11h9.592L8 5.519 3.204 11zm-.753-.659 4.796-5.48a1 1 0 0 1 1.506 0l4.796 5.48c.566.647.106 1.659-.753 1.659H3.204a1 1 0 0 1-.753-1.659z\"/>';\r\n\r\n  }\r\n} \r\n\r\n}\r\n\r\n\r\n\r\nexport default ExamHistoryPanel;\r\n\r\n","import Timer from './Timer';\r\nimport Question from './Question';\r\nimport ExamHistory from './ExamHistory';\r\nimport JumperButton from './JumperButton';\r\nimport QuestionsPanel from './QuestionsPanel';\r\nimport QuestionJumperPanel from './QuestionJumperPanel'\r\nimport ExamHistoryPanel from './ExamHistoryPanel'\r\nimport React from 'react';\r\nimport * as Realm from \"realm-web\";\r\n\r\nconst REALM_APP_ID = \"exam-app-vzpmu\"; // e.g. myapp-abcde\r\nconst app = new Realm.App({ id: REALM_APP_ID });\r\n\r\n\r\nclass Exam extends React.Component {\r\n\t\r\n\r\n\t\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tif (this.state.questions==null) {\r\n\t\t\tthis.getExamQuestions();\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\t\t \r\n\t\t//localStorage.clear();\r\n//\t\tfetch('http://localhost:8080/questions')\r\n//        .then(res => res.json())\r\n//        .then((data) => {\r\n//          this.setState({ questions: data })\r\n//\t\t  console.log(\"We got the data\");\r\n//\t\t  console.log(data);\r\n //       })\r\n //       .catch(console.log)\r\n    }\r\n\r\n\t\r\n  constructor(props) {\r\n\t  console.log(\"Hello World\");\r\n\r\n    super(props);\r\n    \r\n\r\n    this.saveQuestionState = this.saveQuestionState.bind(this);\r\n\tthis.gradeTheExam = this.gradeTheExam.bind(this);\r\n\tthis.setCurrentQuestion = this.setCurrentQuestion.bind(this);\r\n\tthis.showGrade = false;\r\n\tthis.elapsedTime=0;\r\n\tthis.toggleCheat = this.toggleCheat.bind(this);\r\n\tconst d = new Date();\r\n\t\r\n\tlet currentExam = JSON.parse(localStorage.getItem('currentExam'));\r\n\t\r\n\t\tlet cheatFlag = false;\r\n\t\tconsole.log('This is the page prop: ' + this.props.page);\r\n\t\tif (this.props.page=='answer'){\r\n\r\n\t\t\tcheatFlag = true;\r\n\t\t} \r\n\t\t\r\n\t\r\n\tif (currentExam!=null && this.props.page!='answer' ) {\r\n\t\tconsole.log(\"We found a currentExam!!! The questions are:\");\r\n\t\tconsole.log(currentExam.questions);\r\n\t\tthis.state = {\r\n\t\t  name: this.props.name,\r\n\t\t  graded: false,\r\n\t\t  username: \"kaisersose\",\r\n\t\t  start: d.getTime(),\r\n\t\t  finish: 0,\r\n\t\t  questions: currentExam.questions,\r\n\t\t  currentQuestionNumber: 0,\r\n\t\t  cheating: false,\r\n\t\t};\r\n\t\t\r\n\t} else {\r\n\r\n\t\t\r\n\t\t//.log(\"Questions commented out\");\r\n\t  this.state = {\r\n\t\t  name: this.props.name,\r\n\t\t  graded: false,\r\n\t\t  username: \"kaisersose\",\r\n\t\t  start: d.getTime(),\r\n\t\t  finish: 0,\r\n\t\t  //questions: require('../questions.json').slice(0, 1),\r\n\t\t  currentQuestionNumber: 0,\r\n\t\t  cheating: cheatFlag,\r\n\t\t};\r\n\t\t//this.getExamQuestions();\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\r\n  }\r\n  \r\n  async getExamQuestions() {\r\n\tconsole.log(\"in getExamQuestions()\");\r\n\tconst user = await app.logIn(Realm.Credentials.anonymous());\r\n\t\r\n\tconst mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\r\n\tconst questions = mongodb.db(\"ceasars-club\").collection(\"practitioner\");\r\n\tconsole.log(\"Hello\");\r\n\tconsole.log(questions);\r\n\t\r\n\t//{ _id : { $in : [56,57,58,59,66,76,65,67] } }\r\n\tconsole.log(\"About to find questions in: \" + this.props.message);\r\n\tvar message = \"{ \\\"quid\\\" : { \\\"$in\\\" : [56,57,58,59,66,76,65,67] } }\";\r\n\tmessage = this.props.message;\r\n\t\tconst question = await questions.find(JSON.parse(message));\r\n\t\tconsole.log(question);\r\n\t\tthis.setState({questions: question});\r\n\t\tthis.setCurrentQuestion(0);\r\n\t\t\r\n\r\n\t  \r\n  }\r\n\r\n    setCurrentQuestion(position) {\r\n\t\tthis.setState({currentQuestionNumber: position});\r\n\t\tthis.state.questions[position].viewed=true;\r\n\t\tthis.saveQuestionState(this.state.questions[position]);\r\n\t\tlocalStorage.setItem('currentExam', JSON.stringify(this.state));\r\n\t}\r\n\t\r\n\t  \r\n  toggleMarked(){\r\n\t  console.log(\"In toggleMarked\");\r\n\t  //console.log(this.state.questions[0]);\r\n\t  \r\n  }\r\n\t\r\n   saveQuestionState(question){\r\n\t  var updatedExamQuestions = this.state.questions;\r\n\t  updatedExamQuestions[this.currentQuestionNumber] = question;  \r\n      this.setState({questions: updatedExamQuestions});\r\n   }\r\n\t\r\n\tisQuestionAnsweredCorrectly(question) {\r\n        let i = 0;\r\n\t\tfor (i = 0; i < question.options.length; i++) {\r\n           if ( (question.options[i].correct) != (question.options[i].selected) ) {\r\n\t\t\t return false;\r\n\t\t   }\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tgetCorrectCount() {\r\n\t\tlet correctCount = 0;\r\n\t\tlet i = 0;\r\n\t\tfor (i = 0; i < this.state.questions.length; i++) {\r\n           if ( this.isQuestionAnsweredCorrectly(this.state.questions[i]) ) {\r\n\t\t\t correctCount++;\r\n\t\t   }\r\n\t\t}\r\n\t\treturn correctCount;\r\n\t}\r\n\r\n\tgradeTheExam() {\r\n\t\tconst d = new Date();\r\n\t\tlet correctCount = this.getCorrectCount();\r\n\t\tlet examHistory = this.getExamHistory();\r\n\r\n\t\t//examHistory.exams.push(this.state.questions);\r\n\t\t//examHistory.exams.push('questions', this.state.questions);\r\n\t\t\r\n\t\tthis.setState({graded: true}, () =>{});\r\n\t\t\r\n\t    this.showGrade = true;\r\n\t\tthis.setState({cheating: true}, () =>{});\r\n\t\tthis.setState({finish: d.getTime()}, () => {\r\n\t\t\t\t\texamHistory.exams.push(this.state); \r\n\t\t\t\t\tlocalStorage.setItem('examHistory', JSON.stringify(examHistory));\r\n\t\t});\r\n\t\tlocalStorage.removeItem(\"currentExam\");\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tgetExamHistory() {\r\n      try{\r\n         let object = localStorage.getItem('examHistory');\r\n         let examHistory = \"\";\r\n         if (object == null) {\r\n            examHistory = {name:\"Exam History\"};\r\n            let exams = [];\r\n            examHistory.exams = exams;\r\n            localStorage.setItem('examHistory', JSON.stringify(examHistory));\r\n         } else {\r\n            examHistory = JSON.parse(object);\r\n         }\r\n         return examHistory;\r\n      }catch(e){\r\n         console.log(e);\r\n      }\r\n\t\t\r\n\t}\r\n\r\n  componentDidUpdate(){\r\n\t this.showGrade = false;\r\n  }\r\n  \r\n  toggleCheat(){\r\n\t this.setState({cheating: !this.state.cheating});\r\n  }\r\n\r\n   \r\n  \r\n\r\n\t\r\n\t\r\n\t\r\n    save() {\r\n\t console.log('In save');\r\n\t //console.log('${this.state.query}');\r\n\t console.log(\"Posting with the following JSON: \" + JSON.stringify(this.state));\r\n\r\n\tconsole.log('COMPONENT DID MOUNT!');\r\n    console.log('About to fetch');\r\n    fetch('http://localhost:8080/exam', {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n\t\t\tthis.setState( data );\r\n\t\t\tJSON.stringify(data._id);\r\n\t\t  console.log((data.toString()));\r\n\t\t  \r\n\t\t  //String oid = data._id.$oid;\r\n\t\t  var newId = data._id.$oid;\r\n\t\t  this.setState({mongoid: newId});\r\n\t\t  console.log(\"OID is: \" + ((data._id.$oid)));\r\n\t\t  console.log(\"The current state is now: \" + JSON.stringify(this.state));\r\n\t\t  //this.setState(this, data);\r\n      })\r\n      .catch(console.log);\r\n  }\r\n\r\n  \r\n  showResults() {\r\n\t  if (this.state.graded) {\r\n\t  return (\r\n \r\n\t<div class=\"card mt-2\">\r\n\t\t<div class=\"card-header d-flex justify-content-between align-items-center\" id=\"resultsTitle\" >\r\n\t\tYour grade is {this.getCorrectCount()} out of {this.state.questions.length}.\r\n\t\t</div>\r\n\t\t<div id=\"resultsbody\" class=\"card-body\">\r\n\t\t\t<p class=\"card-text\">Learn more about every question asked.</p>\r\n\t\t\t\r\n\t\t\t<ul>\r\n\t\t\t<li>Short explainations of each question are below.</li>\r\n\t\t\t<li>Full explainations are linked in the answer.</li>\r\n\t\t\t<li>Each question has a Twitter link for discussion</li>\r\n\t\t\t<li>Videos and tutorials covering these examination topics are available through the site.</li>\r\n\t\t\t</ul>\r\n\t \r\n\t\t</div>\r\n\t</div>\r\n\r\n\t  \r\n\t  \r\n\t  );\r\n\t  \r\n\t  \r\n\t  \r\n\t  \r\n\t  \r\n\t  \r\n\t  }\r\n\r\n  }\r\n\r\n  render() { \r\n  \r\n  let jumperPanel = null;\r\n  let historyPanel = null;\r\n  {\r\n\t  jumperPanel = \t\t\t\t\t<QuestionJumperPanel \r\n\t\t\tsetCurrentQuestion={this.setCurrentQuestion} \r\n\t\t\ttoggleMarked={this.toggleMarked}\r\n\t\t\tcurrentQuestionNumber = {this.state.currentQuestionNumber} \r\n\t\t\tquestions={this.state.questions}\r\n\t\t\tcheating={this.state.cheating}\r\n\t\t\tgraded={this.state.graded} \r\n\t\t\t\r\n\t\t\t/>\r\n  } \r\n  \r\n  if (this.props.page!='answer'){\r\n\t  historyPanel = \t\t\t\t\t\t\t\t<ExamHistoryPanel \r\n\t\t\tsetCurrentQuestion={this.setCurrentQuestion} \r\n\t\t\ttoggleMarked={this.toggleMarked}\r\n\t\t\tcurrentQuestionNumber = {this.state.currentQuestionNumber} \r\n\t\t\tquestions={this.state.questions}\r\n\t\t\tcheating={this.state.cheating}\r\n\t\t\tgraded={this.state.graded} \r\n\t\t\t\r\n\t\t\t/>\r\n\t\t\t\r\n  } \r\n  \r\n  \r\n    return (\r\n\t\r\n\r\n\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\r\n\t\t\t{this.showResults()}\r\n\r\n\r\n\t\t\t\r\n\r\n\t\t\t<QuestionsPanel questions={this.state.questions} \r\n\t\t\t\t\t\t\tcurrentQuestionNumber = {this.state.currentQuestionNumber} \r\n\t\t\t\t\t\t\tdisabled={this.state.graded} \r\n\t\t\t\t\t\t\tcheating={this.state.cheating} \r\n\t\t\t\t\t\t\ttoggleCheat={this.toggleCheat}\r\n\t\t\t\t\t\t\ttoggleMarked={this.toggleMarked}\r\n\t\t\t\t\t\t\tsaveQuestionState={this.saveQuestionState}  \r\n\t\t\t\t\t\t\tsetCurrentQuestion={this.setCurrentQuestion} \r\n\t\t\t\t\t\t\tgradeTheExam = {this.gradeTheExam} \r\n\t\t\t\t\t\t\tpage = {this.props.page}\r\n\r\n  \r\n/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{jumperPanel}\r\n\t\t\t\r\n\r\n\t\t\t{historyPanel}\r\n\t\t\r\n\r\n\r\n\r\n\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\n\t\t\t</div>\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default Exam;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport * as Realm from \"realm-web\";\r\nimport Exam from './Components/Exam';\r\n\r\nconst REALM_APP_ID = \"exam-app-vzpmu\"; // e.g. myapp-abcde\r\nconst app = new Realm.App({ id: REALM_APP_ID });\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n\tconsole.log(\"In App Constructor.\");\r\n\r\n    super(props);\r\n\tthis.setState({message: el.getAttribute('data-param')});\r\n\tconsole.log(el.getAttribute('data-param'));\r\n\t//console.log(this.state.message);\r\n    //console.log(\"attempts at message: \" + this.state.message);\r\n\t\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return <div className=\"App\"  message={el.getAttribute('data-param')} name={el.getAttribute('data-name')}><Exam page={el.getAttribute('data-page')} message={el.getAttribute('data-param')} name={el.getAttribute('data-name')}/>{this.props.message}</div>\r\n  }\r\n}\r\n\r\nconst el = document.getElementById('root');\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}