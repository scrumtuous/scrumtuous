{"version":3,"sources":["Components/Question.js","Components/Timer.js","Components/JumperButton.js","Components/ExamHistory.js","Components/QuestionsPanel.js","Components/QuestionJumperPanel.js","Components/QuestionEntry.js","Components/Exam.js","App.js","index.js"],"names":["Question","Component","props","state","cheating","correctCount","i","this","question","options","length","correct","getNumberOfCorrectOptions","index","flag","selected","saveQuestionState","e","console","log","disabled","graded","class","id","query","map","option","highlightAnswer","type","getRadioOrCheckboxType","name","value","checked","isDisabled","onClick","toggleOption","for","text","dangerouslySetInnerHTML","__html","answer","JumperButton","setCurrentQuestion","indexNumber","changeQuestion","QuestionsPanel","questions","currentQuestionNumber","buttonEnabled","getEnabledOrDisabledButtonState","getCurrentQuestion","setPreviousButtonState","previousQuestion","setNextButtonState","nextQuestion","setFinishButtonState","gradeTheExam","QuestionJumperPanel","QuestionEntry","optionChangedHandler","event","target","setState","code","keyword","wasselected","link","level","marked","wasmarked","time","image","certification","syllabus","require","oi","si","di","objectives","subtopics","details","fetch","method","body","JSON","stringify","then","res","json","data","catch","className","rows","onChange","toggleCheckbox","save","Accordion","defaultActiveKey","Item","eventKey","Header","domain","Body","objective","InputGroup","Checkbox","shortdesc","Text","FormControl","subtopic","detail","React","Exam","bind","showGrade","elapsedTime","username","date","elapsedtime","slice","localStorage","clear","position","updatedExamQuestions","isQuestionAnsweredCorrectly","getCorrectCount","examHistory","getExamHistory","exams","push","setItem","alert","object","getItem","parse","_id","toString","newId","$oid","mongoid","show","toggleCheat","App","path","element","Layout","Home","About","Dashboard","NoMatch","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97d7dcc5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n \r\nclass Question extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t  cheating: false,\r\n\t\t};\r\n    }   \r\n\t\r\n\tgetNumberOfCorrectOptions() {\r\n\t\tlet correctCount = 0;\r\n        let i = 0;\r\n\t\tfor (i = 0; i < this.props.question.options.length; i++) {\r\n           if (this.props.question.options[i].correct) {\r\n\t\t\t correctCount++;\r\n\t\t   }\r\n\t\t}\r\n\t\treturn correctCount;\r\n\t}\r\n\t\r\n\t\r\n\tgetRadioOrCheckboxType() {\r\n\t\tif (this.getNumberOfCorrectOptions() > 1 ) {\r\n\t\t\treturn \"checkbox\";\r\n\t\t}\r\n\t\treturn \"checkbox\";\r\n\t}\r\n\t\r\n\t\r\n\ttoggleOption(index) {\r\n      try{\r\n         var flag = this.props.question.options[index].selected;\r\n         this.props.question.options[index].selected = !flag;\r\n         this.props.saveQuestionState(this.props.question);\r\n      } catch(e){\r\n         console.log(e);\r\n      }\r\n\t}\r\n\t\r\n\tisAnsweredCorrectly() {\r\n\t\tlet correctCount = 0;\r\n        let i = 0;\r\n\t\tfor (i = 0; i < this.props.question.options.length; i++) {\r\n           if ( (this.props.question.options[i].correct) != (this.props.question.options[i].selected) ) {\r\n\t\t\t return \"false\";\r\n\t\t   }\r\n\t\t}\r\n\t\treturn \"true\";\r\n\t}\r\n\t\r\n\tisDisabled() {\r\n\t\tif (this.props.disabled==true) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\thighlightAnswer(index) {\r\n\t\tconsole.log(this.props.graded);\r\n\t\tif (this.props.cheating || this.props.disabled) {\r\n\t\t\tconsole.log(\"We are cheating or it is graded.\");\r\n\t\t\tif (this.props.question.options[index].correct) {\r\n\t\t\t\tconsole.log(\"The option is correct.\")\r\n\t\t\t\treturn \" border border-success \";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\t\r\n    render(){\r\n        return (\r\n\r\n\t\t\t<div class=\"card-body\">\r\n\r\n\t\t\t   <h5 class=\"card-title\" id=\"query\"> \r\n\t\t\t\t  {this.props.question.query} (Choose {this.getNumberOfCorrectOptions()})\r\n\t\t\t   </h5>\r\n\t\t\t   \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.question.options.map((option, index)=>\r\n\t\t\t\t\t   <div class={\"form-check my-2 \"+this.highlightAnswer(index)}  id={\"outerOptionDiv\" + index}>\r\n\t\t\t\t\t\t  <input class=\"form-check-input  option-radio \" type={this.getRadioOrCheckboxType()} name=\"optionRadios\" id={\"option\" + index} value={\"option\"  + index}\r\n\t\t\t\t\t\t\t checked={this.props.question.options[index].selected} \r\n\t\t\t\t\t\t\t disabled={this.isDisabled()}\r\n\t\t\t\t\t\t\t onClick={() => this.toggleOption(index)} \r\n\t\t\t\t\t\t  ></input>\r\n\t\t\t\t\t\t  <label class=\"form-check-label\" for={\"option\"  + index} id={\"labelOption\" + index}>\r\n\t\t\t\t\t\t  {this.props.question.options[index].text}\r\n\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t   </div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t <div dangerouslySetInnerHTML={{__html: this.props.question.answer}} />\r\n\t\t\t</div>\r\n           \r\n            \r\n        )\r\n    }\r\n}\r\n \r\nexport default Question;","import React, { Component } from 'react';\r\n\r\nclass Timer extends Component{\r\n    render(){\r\n        return (\r\n            <>\r\n                <button id=\"timer\" class=\"btn btn-secondary\">05:00</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;","import React, { Component } from 'react';\r\n\r\nclass JumperButton extends Component{\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n    }\r\n\t\r\n\tchangeQuestion() {\r\n\t\tthis.props.setCurrentQuestion( this.props.indexNumber );\r\n\t}\r\n\t\r\n    render(){\r\n        return (\r\n\t\t\t<span>\r\n\t\t\t\t<button id=\"btn{this.props.questionNumber}\" type=\"button\" class=\"btn btn-info btn-sm\" onClick={() => this.changeQuestion()}>\r\n\t\t\t\t{this.props.indexNumber + 1}\r\n\t\t\t\t</button>\r\n\t\t\t\t&nbsp;\r\n\t\t\t</span>\r\n        )\r\n    }\r\n} \r\n\r\nexport default JumperButton;\r\n\r\n\r\n/*\r\n  createJumperButtons(){\r\n   document.getElementById(\"questionJumper\").innerHTML = \"\";\r\n   var questionsLength = this.state.questions.length;\r\n     for(var i = 0; i < questionsLength; i++){\r\n         var button = document.createElement(\"button\");\r\n         button.appendChild(document.createTextNode(i+1));\r\n         button.setAttribute(\"id\", \"btn\"+i);\r\n         button.setAttribute(\"type\", \"button\");\r\n         button.setAttribute(\"class\", \"btn btn-secondary btn-sm\");\r\n         if(i == this.state.currentQuestionNumber){\r\n            button.setAttribute(\"class\", \"btn btn-primary btn-sm\");\r\n         }\r\n         document.getElementById(\"questionJumper\").appendChild(button);\r\n         document.getElementById(\"questionJumper\").appendChild(document.createTextNode(\"\\u00A0\"));//nbsp\r\n     }\r\n\r\n     for(let x = 0; x < questionsLength; x++){\r\n         var elem = document.getElementById(\"btn\"+x);\r\n         elem.addEventListener(\"click\", () => { this.clickJumperButton(x); });\r\n     }\r\n  }\r\n\r\n  clickJumperButton(x){\r\n\r\n   //this.updateTimeSpent();\r\n   //this.setState({time:0});\r\n   this.setCurrentQuestion(x);\r\n  \r\n  }\r\n\r\n\r\n*/","import React, { Component } from 'react';\r\n \r\nclass ExamHistory extends Component{\r\n \r\n\t\r\n\t\r\n    render(){\r\n        return (\r\n\r\n<div class=\"card mt-2\">\r\n   <div class=\"card-header\" id=\"localStorageTitle\">\r\n      Local Storage\r\n   </div>\r\n   <div class=\"card-body\">\r\n      <h3 class=\"card-title\" id=\"localStorageCardTitle\">What's in Storage?</h3>\r\n      <p>Number of exams in your history: {this.getExamHistory().length} </p>\r\n      <button id=\"clearls\" class=\"btn btn-primary\" type=\"submit\"\r\n         onClick={() => this.clearLocalStorage()}\r\n      >Clear Local Storage</button>&nbsp;\r\n\r\n\r\n\t  \t  \t\t\t\t<button id=\"formatToTable\" className=\"btn btn-primary\" type=\"submit\" onClick={() => this.formatToTable()}>Format to Table</button>&nbsp;\r\n\t\t\t\t\t\t\r\n\t  \t\t\t\t<button className=\"btn btn-primary\" type=\"submit\" onClick={() => this.formatToCode()}>Format to Code</button>\r\n\t  \r\n      <div>\r\n         <pre id=\"examHistory\" key={Math.random()}> { JSON.stringify(this.getExamHistory(), \"\", \"\\t\") } </pre>\r\n      </div>\r\n      <p class=\"card-text\">\r\n      </p>\r\n   </div>\r\n</div>\r\n           \r\n            \r\n        )\r\n    }\r\n\t\r\n\tgetExamHistory() {\r\n\t\t//alert(\"Get Exam History\");\r\n      try{\r\n         let object = localStorage.getItem('examHistory');\r\n         let examHistory = \"\";\r\n         \r\n         if (object == null) {\r\n            examHistory = {name:\"Exam History\"};\r\n            let exams = [];\r\n            examHistory.exams = exams;\r\n            localStorage.setItem('examHistory', JSON.stringify(examHistory));\r\n            //this.setState({history: examHistory})\r\n         } else {\r\n            examHistory = JSON.parse(object);\r\n         }\r\n         return examHistory;\r\n      }catch(e){\r\n         console.log(e);\r\n      }\r\n\t\t\r\n\t}\r\n\t\r\n\tclearLocalStorage() {\r\n\t\tlocalStorage.clear('examHistory');\r\n\t\tthis.setState({history: this.getExamHistory()});\r\n      document.getElementById(\"formatToTable\").setAttribute(\"class\", \"enabled btn btn-primary\");\r\n      document.getElementById(\"formatToCode\").setAttribute(\"class\", \"disabled btn btn-primary\");\r\n\t}\r\n\r\n   formatToCode() {\r\n      document.getElementById(\"formatToTable\").setAttribute(\"class\", \"enabled btn btn-primary\");\r\n      document.getElementById(\"formatToCode\").setAttribute(\"class\", \"disabled btn btn-primary\");\r\n      document.getElementById(\"examHistory\").innerHTML = JSON.stringify(this.getExamHistory(), \"\", \"\\t\");\r\n   }\r\n\r\n   formatToTable() {\r\n      document.getElementById(\"formatToTable\").setAttribute(\"class\", \"disabled btn btn-primary\");\r\n      document.getElementById(\"formatToCode\").setAttribute(\"class\", \"enabled btn btn-primary\");\r\n      var examHistory = this.getExamHistory();\r\n      \r\n         document.getElementById(\"examHistory\").innerHTML = \"\";\r\n         var table = document.createElement(\"table\");\r\n         table.setAttribute(\"id\", \"tablestyle\");\r\n         var tr = document.createElement(\"tr\");\r\n         var headers = [\"Exam number\", \"Question\", \"Options Given\", \"Correct Options\", \"Selected Options\"];\r\n         for (var i = 0; i < headers.length; i++) {\r\n            var th = document.createElement(\"th\");\r\n            th.appendChild(document.createTextNode(headers[i]));\r\n            tr.appendChild(th);\r\n         }\r\n         table.appendChild(tr);\r\n\r\n         if(examHistory.exams.length < 1){\r\n            tr = document.createElement(\"tr\");\r\n            td = document.createElement(\"td\");\r\n            td.setAttribute(\"colspan\", \"5\");\r\n            td.setAttribute(\"style\", \"text-align: center\");\r\n            td.appendChild(document.createTextNode(\"**Nothing to show**\"));\r\n            tr.appendChild(td);\r\n            table.appendChild(tr); \r\n         }\r\n         for (var counter = 0; counter < examHistory.exams.length; counter++) { //per exam\r\n            console.log(\"Exam History: \" + (counter + 1));\r\n            tr = document.createElement(\"tr\");\r\n            var td = document.createElement(\"td\"); //Start of Exam Number\r\n            td.appendChild(document.createTextNode(\"Exam History: \" + (counter + 1))); \r\n            tr.appendChild(td);\r\n            table.appendChild(tr);//End of Exam Number\r\n            for (var q = 0; q < examHistory.exams[counter].length; q++) { //per question\r\n               var question = examHistory.exams[counter][q].query;\r\n               var correctOptions = [];\r\n               var selectedOptions = [];\r\n               var optionsGiven = [];\r\n               var options = examHistory.exams[counter][q].options;\r\n               var isCorrect = true;\r\n               console.log(JSON.stringify(question));\r\n               for (var opt = 0; opt < options.length; opt++) { //selected and correct options gathering\r\n                  if (examHistory.exams[counter][q].options[opt].correct) {\r\n                     correctOptions.push(examHistory.exams[counter][q].options[opt].text);\r\n                  }\r\n                  if (examHistory.exams[counter][q].options[opt].selected) {\r\n                     selectedOptions.push(examHistory.exams[counter][q].options[opt].text);\r\n                  }\r\n                  optionsGiven.push(examHistory.exams[counter][q].options[opt].text);\r\n               }\r\n   \r\n               tr = document.createElement(\"tr\");\r\n               tr.appendChild(document.createElement(\"td\")); //for blank td\r\n               \r\n               td = document.createElement(\"td\");\r\n               td.appendChild(document.createTextNode(question));\r\n               tr.appendChild(td);\r\n   \r\n               td = document.createElement(\"td\");\r\n               var p = document.createElement(\"p\");\r\n               p.appendChild(document.createTextNode(\"Given Options:\"));\r\n               td.appendChild(p);\r\n               var ul = document.createElement(\"ul\");\r\n               for (opt = 0; opt < optionsGiven.length; opt++) {\r\n                  var li = document.createElement(\"li\");\r\n                  li.setAttribute(\"style\", \"margin-left: 40px\");\r\n                  li.appendChild(document.createTextNode(optionsGiven[opt]));\r\n                  td.appendChild(li);\r\n               }\r\n               tr.appendChild(td);\r\n   \r\n               td = document.createElement(\"td\");\r\n               p = document.createElement(\"p\");\r\n               p.appendChild(document.createTextNode(\"Correct Options:\"));\r\n               td.appendChild(p);\r\n               for (opt = 0; opt < correctOptions.length; opt++) {\r\n                  var li = document.createElement(\"li\");\r\n                  li.setAttribute(\"style\", \"margin-left: 40px\");\r\n                  li.appendChild(document.createTextNode(correctOptions[opt]));\r\n                  td.appendChild(li);\r\n               }\r\n               tr.appendChild(td);\r\n   \r\n               td = document.createElement(\"td\");\r\n               p = document.createElement(\"p\");\r\n               p.appendChild(document.createTextNode(\"Selected Options:\"));\r\n               td.appendChild(p);\r\n               for (opt = 0; opt < selectedOptions.length; opt++) {\r\n                  var li = document.createElement(\"li\");\r\n                  li.setAttribute(\"style\", \"margin-left: 40px\");\r\n                  li.appendChild(document.createTextNode(selectedOptions[opt]));\r\n                  td.appendChild(li);\r\n               }\r\n               tr.appendChild(td);\r\n   \r\n               console.log(\"-------correct: \" + correctOptions.toString());\r\n               console.log(\"-------selected: \" + selectedOptions.toString());\r\n   \r\n               if (selectedOptions.length < 1) { //check if the user answered the question\r\n                  isCorrect = false;\r\n               } else {\r\n                  for (i = 0; i < selectedOptions.length; i++) { //decision if the answer is correct\r\n                     var selected = selectedOptions[i];\r\n                     if (!correctOptions.includes(selected)) {\r\n                        isCorrect = false;\r\n                     }\r\n                  }\r\n               }\r\n   \r\n               if (isCorrect) {\r\n                  console.log(\"-------You are correct\");\r\n                  tr.setAttribute(\"style\", \"background-color:#ccffcc\");\r\n               } else {\r\n                  tr.setAttribute(\"style\", \"background-color:#ff6666\");\r\n                  console.log(\"-------You are wrong\");\r\n               }\r\n   \r\n               table.appendChild(tr);\r\n   \r\n            }\r\n   \r\n         }\r\n         document.getElementById(\"examHistory\").appendChild(document.createElement(\"br\"));\r\n         document.getElementById(\"examHistory\").appendChild(table);\r\n      \r\n      \r\n   }\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n \r\n \r\n \r\n \r\n \r\nexport default ExamHistory;","import React, { Component } from 'react';\r\nimport Question from './Question';\r\n\r\nclass QuestionsPanel extends Component{\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n    }\r\n\t\r\n\tisQuestionAnsweredCorrectly(question) {\r\n        let i = 0;\r\n\t\tfor (i = 0; i < question.options.length; i++) {\r\n\t\t\t\r\n           if ( (question.options[i].correct) != (question.options[i].selected) ) {\r\n\t\t\t return false;\r\n\t\t   }\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tgetCurrentQuestion() {\r\n\t\treturn this.props.questions[this.props.currentQuestionNumber];\r\n\t};\r\n\t\r\n\tchangeQuestion() {\r\n\t\tthis.props.setCurrentQuestion( this.props.indexNumber)\r\n\t}\r\n\t\r\n\tnextQuestion() {\r\n\t  this.props.setCurrentQuestion(this.props.currentQuestionNumber + 1);\r\n\t}\r\n\t\r\n    previousQuestion() {\r\n\t  this.props.setCurrentQuestion(this.props.currentQuestionNumber - 1);\r\n\t}\r\n\r\n\t\r\n   getEnabledOrDisabledButtonState(flag) {\r\n\tif(flag){\r\n      return \" enabled btn btn-primary \";\r\n    } else {\r\n\t  return \" disabled btn btn-primary \";\r\n\t}  \r\n   }\r\n\r\n   \r\n   setPreviousButtonState() {\r\n\t   let buttonEnabled = this.props.currentQuestionNumber > 0;\r\n\t   return this.getEnabledOrDisabledButtonState(buttonEnabled);\r\n   }\r\n   \r\n   setNextButtonState() {\r\n\tlet buttonEnabled = this.props.currentQuestionNumber < this.props.questions.length-1;\r\n\treturn this.getEnabledOrDisabledButtonState(buttonEnabled);\r\n   }\r\n   \r\n   setFinishButtonState() {\r\n\t   let buttonEnabled = !this.props.graded;\r\n\t   return this.getEnabledOrDisabledButtonState(buttonEnabled);\r\n   }\r\n   \r\n    render(){\r\n        return (\r\n\r\n\r\n\t\t\t<div class=\"card\">\r\n\t\t\t   <div class=\"card-header\" id=\"questionNumber\">\r\n\t\t\t\t  Question {this.props.currentQuestionNumber + 1}\r\n\t\t\t   </div>\r\n\t\t\t   <div class=\"card-body\">\r\n\t\t\t   \r\n\t\t\t\t  <Question saveQuestionState = {this.props.saveQuestionState} question={ this.getCurrentQuestion()} disabled={this.props.disabled} cheating={this.props.cheating}/>\r\n\t\t\t\t  \r\n\t\t\t\t  <div>\r\n\t\t\t\t\t <p class=\"card-text mt-3\">\r\n\t\t\t\t\t\t<a id=\"previous\" class={this.setPreviousButtonState()} onClick={() => this.previousQuestion()}>&lt;&lt; Previous</a>&nbsp;\r\n\t\t\t\t\t\t<a id=\"next\" class={this.setNextButtonState()} onClick={() => this.nextQuestion()}>Next &gt;&gt;</a> &nbsp;\r\n\t\t\t\t\t\t<a id=\"finish\" class={this.setFinishButtonState()} onClick={() => this.props.gradeTheExam()}>Finish</a>&nbsp;\r\n\t\t\t\t\t </p> \r\n\t\t\t\t\t <div></div>\r\n\t\t\t\t  </div>\r\n\t\t\t   </div>\r\n\t\t\t</div>\r\n\r\n        )\r\n    }\r\n} \r\n\r\nexport default QuestionsPanel;\r\n\r\n","import React, { Component } from 'react';\r\nimport Question from './Question';\r\nimport JumperButton from './JumperButton';\r\n\r\nclass QuestionJumperPanel extends Component{\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n    }\r\n\t\r\n    render(){\r\n        return (\r\n\r\n\t\t\t<div class=\"card mt-2\">\r\n\t\t\t   <div class=\"card-header\" id=\"questionJumperTitle\">\r\n\t\t\t\t  Question Jumper\r\n\t\t\t   </div>\r\n\t\t\t   <div class=\"card-body\">\r\n\t\t\t\t  <h3 class=\"card-title\" id=\"questionJumperCardTitle\">Navigation</h3>\r\n\t\t\t\t  <p class=\"card-text\"></p>\r\n\t\t\t\t  <div id=\"questionJumper\">\r\n\t\t\t\t  {\r\n\t\t\t\t\t  this.props.questions.map((value, index) => { \r\n\t\t\t\t\t\treturn <JumperButton indexNumber={index} setCurrentQuestion={this.props.setCurrentQuestion} ></JumperButton>\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t)\r\n\t\t\t\t  }\r\n\t\t\t\t  </div>\r\n\t\t\t   </div>\r\n\t\t\t</div>\r\n\r\n        )\r\n    }\r\n} \r\n\r\nexport default QuestionJumperPanel;\r\n\r\n","import React, { Component } from 'react';\r\nimport Modal from './Modal';\r\nimport './modal.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\n\r\nclass QuestionEntry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: 'query',\r\n\t  code: '',\r\n      keyword: '',\r\n      options: [\r\n\t  { text: 'a', correct: false, selected: false, wasselected: false  }, \r\n\t  { text: 'b', correct: false, selected: false, wasselected: false  }, \r\n\t  { text: 'c', correct: false, selected: false, wasselected: false }, \r\n\t  { text: 'd', correct: false, selected: false, wasselected: false  }],\r\n      answer: 'answer',\r\n      link: 'link',\r\n      level: '5',\r\n      marked: false,\r\n\t  wasmarked: false,\r\n      time: '0',\r\n\t  image: '',\r\n      certification: 'PRACTITIONER',\r\n      syllabus: require('../syllabus.json'),\r\n\r\n    };\r\n  }\r\n  \r\n  toggleCheckbox(index) {\r\n\t  this.state.options[index].correct = !this.state.options[index].correct;\r\n\t  this.setState(this.state);\r\n  }\r\n\r\n  toggleOption(i, oi, si, di) {\r\n    try {\r\n\t\t  // alert();\r\n\r\n\t\t  if (typeof (di) !== 'undefined') {\r\n\t\t\t  this.state.syllabus[i].objectives[oi].subtopics[si].details[di].selected = !this.state.syllabus[i].objectives[oi].subtopics[si].details[di].selected;\r\n\t\t\t  this.setState(this.state);\r\n\t\t\t  return;\r\n\t\t  }\r\n\r\n\t\t  if (typeof (si) !== 'undefined') {\r\n\t\t\t  this.state.syllabus[i].objectives[oi].subtopics[si].selected = !this.state.syllabus[i].objectives[oi].subtopics[si].selected;\r\n\t\t\t  this.setState(this.state);\r\n\t\t\t  return;\r\n\t\t  }\r\n\r\n\t\t  if (typeof (oi) !== 'undefined') {\r\n\t\t\t  this.state.syllabus[i].objectives[oi].selected = !this.state.syllabus[i].objectives[oi].selected;\r\n\t\t\t  //console.log(`${i} ${oi}`);\r\n\t\t\t  this.setState(this.state);\r\n\t\t  }\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  save() {\r\n\t console.log('In save');\r\n\t //console.log(`${this.state.query}`);\r\n\t //console.log(`${JSON.stringify(this.state)}`);\r\n\r\n\t    console.log('COMPONENT DID MOUNT!');\r\n    console.log('About to fetch');\r\n    fetch('http://localhost:8080/question', {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //this.setState({ questions: data });\r\n\t\t  console.log('We got the data');\r\n\t\t  console.log(data);\r\n      })\r\n      .catch(console.log);\r\n  }\r\n\r\n  optionChangedHandler = (event, index) => {\r\n\t  console.log('IN handler');\r\n    // this.state.query = event.target.value;\r\n    // this.setState({query: event.target.value});\r\n    //console.log(this.state.options[index].text);\r\n    this.state.options[index].text = event.target.value;\r\n    //console.log(this.state.options[index].text);\r\n    this.setState({ options: this.state.options });\r\n    // options[0].text = event.target.value;\r\n    // this.state.options = event.target.value;\r\n\r\n    // this.setState({options:\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"container\">\r\n        <br />\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-header\" id=\"questionNumber\">\r\n            Question\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n\r\n                    <textarea\r\n                      className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"\r\n                      name=\"query\"\r\n                      value={this.state.query}\r\n                      onChange={(event) => this.setState({ query: event.target.value })}\r\n                    /> \r\n<br />\r\n                  </div>\r\n\r\n                  <div className=\"col-1\">\r\n\r\n                    <small>Img:</small>\r\n\r\n                  </div>\r\n                  <div className=\"col-11\">\r\n\r\n                    <input type=\"text\" className=\"form-control \" name=\"image\" value={this.state.image}  onChange={(event) => this.setState({ image: event.target.value })}\r\n\t\t\t\t\t/>\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div className=\"col-1\">\r\n\r\n                    <input\r\n                      className=\"form-check-input  option-radio \" type=\"checkbox\" name=\"optionRadios\" \r\n                      checked={this.state.options[0].correct}\r\n                      onChange={() => this.toggleCheckbox(0)}\r\n                    />\r\n\r\n                  </div>\r\n                  <div className=\"col-11\">\r\n\r\n                    <input type=\"text\" className=\"form-control \" name=\"optiona\" value={this.state.options[0].text} onChange={(event) => this.optionChangedHandler(event, 0)} />\r\n                    <br />\r\n\r\n                  </div>\r\n\r\n                  <div className=\"col-1\">\r\n                    <input\r\n                      className=\"form-check-input  option-radio \" type=\"checkbox\" name=\"optionRadios\" \r\n                      checked={this.state.options[1].correct}\r\n                      onChange={() => this.toggleCheckbox(1)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-11\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"optionb\" value={this.state.options[1].text} onChange={(event) => this.optionChangedHandler(event, 1)} />\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div className=\"col-1\">\r\n                    <input\r\n                      className=\"form-check-input  option-radio \" type=\"checkbox\" name=\"optionRadios\" \r\n                      checked={this.state.options[2].correct}\r\n                      onChange={() => this.toggleCheckbox(2)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-11\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"optionc\" value={this.state.options[2].text} onChange={(event) => this.optionChangedHandler(event, 2)} />\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div className=\"col-1\">\r\n                    <input\r\n                      className=\"form-check-input  option-radio \" type=\"checkbox\" name=\"optionRadios\" \r\n                      checked={this.state.options[3].correct}\r\n                      onChange={() => this.toggleCheckbox(3)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-11\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"optiond\" value={this.state.options[3].text} onChange={(event) => this.optionChangedHandler(event, 3)} />\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div className=\"col-1\">\r\n\r\n                    <small>Link:</small>\r\n\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n\r\n                    <input type=\"text\" className=\"form-control \" name=\"link\" value={this.state.link} onChange={(event) => this.optionChangedHandler(event, 0)} />\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div className=\"col-1\">\r\n\r\n                    <small>Level:</small>\r\n\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n\r\n                    <input type=\"text\" className=\"form-control \" name=\"level\" value={this.state.level} onChange={(event) => this.setState({ level: event.target.value })}\r\n\t\t\t\t\t/>\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n\r\n                    <textarea\r\n                      className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"\r\n                      name=\"answer\"\r\n                      value={this.state.answer}\r\n                      onChange={(event) => this.setState({ answer: event.target.value })}\r\n                    />\r\n<br />\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div>\r\n\t\t\t\t<button className=\"btn btn-primary\" type=\"submit\" onClick={() => this.save()}>Button</button>\r\n                </div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<textarea\r\n                      className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"7\"\r\n                      name=\"code\"\r\n                      value={this.state.code}\r\n                      onChange={(event) => this.setState({ code: event.target.value })}\r\n                    /> \r\n<br />\r\n\r\n              </div>\r\n              <div className=\"col-4\">\r\n\r\n\t\t\t   \r\n\t\t\t  \r\n\t\t\t  \r\n                <Accordion defaultActiveKey=\"domain\">\r\n                  { \r\n\t  this.state.syllabus?.map((data, i) => (\r\n  <Accordion.Item eventKey={\"domain-\"+i}>\r\n    <Accordion.Header>{data.domain}</Accordion.Header>\r\n    <Accordion.Body>\r\n      {data.objectives?.map((objective, oi) => (\r\n        <div>\r\n\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Checkbox aria-label={objective.shortdesc} onChange={() => this.toggleOption(i, oi)} checked={objective.selected} />\r\n            <InputGroup.Text>{objective.shortdesc}</InputGroup.Text>\r\n            <FormControl aria-label={objective.shortdesc} />\r\n          </InputGroup>\r\n\r\n          {objective.subtopics?.map((subtopic, si) => (\r\n            <div>\r\n\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>&nbsp;</InputGroup.Text>\r\n                <InputGroup.Checkbox aria-label={subtopic.shortdesc} onChange={() => this.toggleOption(i, oi, si)} checked={subtopic.selected} />\r\n                <InputGroup.Text>\r\n                  {subtopic.shortdesc}\r\n                </InputGroup.Text>\r\n                <FormControl aria-label={subtopic.shortdesc} />\r\n              </InputGroup>\r\n\r\n              {subtopic.details && subtopic.details.length ? (\r\n\r\n<div>\r\n                  {subtopic.details?.map((detail, di) => (\r\n\r\n                <InputGroup className=\"mb-3\">\r\n              <InputGroup.Text>&nbsp;</InputGroup.Text><InputGroup.Text>&nbsp;</InputGroup.Text>\r\n              <InputGroup.Checkbox aria-label={detail.shortdesc} onChange={() => this.toggleOption(i, oi, si, di)} checked={detail.selected} />\r\n              <InputGroup.Text>{detail.shortdesc}</InputGroup.Text>\r\n              <FormControl aria-label={detail.shortdesc} />\r\n            </InputGroup>\r\n\r\n\t\t\t\t\t\t\t\t\t  ))}\r\n\r\n</div>\r\n              ) : ''}\r\n\r\n            </div>\r\n\r\n          ))}\r\n\r\n        </div>\r\n\r\n      ))}\r\n\r\n    </Accordion.Body>\r\n\r\n  </Accordion.Item>\r\n\r\n\t  )\r\n\t)\r\n  }\r\n\r\n                </Accordion>\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionEntry;\r\n","import React, { Component } from 'react';\r\nimport Timer from './Timer';\r\nimport Question from './Question';\r\nimport Modal from './Modal';\r\nimport './modal.css';\r\nimport ExamHistory from './ExamHistory';\r\nimport JumperButton from './JumperButton';\r\nimport QuestionsPanel from './QuestionsPanel';\r\nimport QuestionJumperPanel from './QuestionJumperPanel'\r\nimport QuestionEntry from './QuestionEntry';\r\n\r\n\r\nclass Exam extends React.Component {\r\n\t\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\t\r\n        console.log(\"COMPONENT DID MOUNT!\");\r\n\t\tconsole.log(\"About to fetch\");\r\n\t\tlocalStorage.clear();\r\n\t\tfetch('http://localhost:8080/questions')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n          this.setState({ questions: data })\r\n\t\t  console.log(\"We got the data\");\r\n\t\t  console.log(data);\r\n        })\r\n        .catch(console.log)\r\n    }\r\n\r\n\t\r\n  constructor(props) {\r\n\t  console.log(\"Hello World\");\r\n    super(props);\r\n    this.saveQuestionState = this.saveQuestionState.bind(this);\r\n\tthis.gradeTheExam = this.gradeTheExam.bind(this);\r\n\tthis.setCurrentQuestion = this.setCurrentQuestion.bind(this);\r\n\tthis.showGrade = false;\r\n\tthis.elapsedTime=0;\r\n\t\r\n\r\n\tconsole.log(\"Questions commented out\");\r\n    this.state = {\r\n      graded: false,\r\n\t  username: \"kaisersose\",\r\n\t  date: \"\",\r\n\t  elapsedtime: \"\",\r\n\t  questions: require('../questions.json').slice(0, 1),\r\n\t  currentQuestionNumber: 0,\r\n\t  cheating: false,\r\n    };\r\n  }\r\n\r\n    setCurrentQuestion(position) {\r\n\t\tthis.setState({currentQuestionNumber: position});\r\n\t}\r\n\t\r\n   saveQuestionState(question){\r\n\t  var updatedExamQuestions = this.state.questions;\r\n\t  updatedExamQuestions[this.currentQuestionNumber] = question;  \r\n      this.setState({questions: updatedExamQuestions});\r\n   }\r\n\t\r\n\tisQuestionAnsweredCorrectly(question) {\r\n        let i = 0;\r\n\t\tfor (i = 0; i < question.options.length; i++) {\r\n           if ( (question.options[i].correct) != (question.options[i].selected) ) {\r\n\t\t\t return false;\r\n\t\t   }\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tgetCorrectCount() {\r\n\t\tlet correctCount = 0;\r\n\t\tlet i = 0;\r\n\t\tfor (i = 0; i < this.state.questions.length; i++) {\r\n           if ( this.isQuestionAnsweredCorrectly(this.state.questions[i]) ) {\r\n\t\t\t correctCount++;\r\n\t\t   }\r\n\t\t}\r\n\t\treturn correctCount;\r\n\t}\r\n\r\n\tgradeTheExam() {\r\n\t\t\r\n\t\tlet correctCount = this.getCorrectCount();\r\n\t\tlet examHistory = this.getExamHistory();\r\n\t\texamHistory.exams.push(this.state.questions);\r\n\t\tlocalStorage.setItem('examHistory', JSON.stringify(examHistory));\r\n\t\tthis.setState({graded: true}, () =>{});\r\n\t    this.showGrade = true;\r\n\t\talert(\"You scored \" + correctCount + \" out of \" + this.state.questions.length + \".\");\r\n\t}\r\n\t\r\n\tgetExamHistory() {\r\n      try{\r\n         let object = localStorage.getItem('examHistory');\r\n         let examHistory = \"\";\r\n         if (object == null) {\r\n            examHistory = {name:\"Exam History\"};\r\n            let exams = [];\r\n            examHistory.exams = exams;\r\n            localStorage.setItem('examHistory', JSON.stringify(examHistory));\r\n         } else {\r\n            examHistory = JSON.parse(object);\r\n         }\r\n         return examHistory;\r\n      }catch(e){\r\n         console.log(e);\r\n      }\r\n\t\t\r\n\t}\r\n\r\n  componentDidUpdate(){\r\n\t this.showGrade = false;\r\n  }\r\n  \r\n  toggleCheat(){\r\n\t this.setState({cheating: !this.state.cheating});\r\n  }\r\n  \r\n    save() {\r\n\t console.log('In save');\r\n\t //console.log('${this.state.query}');\r\n\t console.log(\"Posting with the following JSON: \" + JSON.stringify(this.state));\r\n\r\n\tconsole.log('COMPONENT DID MOUNT!');\r\n    console.log('About to fetch');\r\n    fetch('http://localhost:8080/exam', {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n\t\t\tthis.setState( data );\r\n\t\t\tJSON.stringify(data._id);\r\n\t\t  console.log((data.toString()));\r\n\t\t  \r\n\t\t  //String oid = data._id.$oid;\r\n\t\t  var newId = data._id.$oid;\r\n\t\t  this.setState({mongoid: newId});\r\n\t\t  console.log(\"OID is: \" + ((data._id.$oid)));\r\n\t\t  console.log(\"The current state is now: \" + JSON.stringify(this.state));\r\n\t\t  //this.setState(this, data);\r\n      })\r\n      .catch(console.log);\r\n  }\r\n\r\n\r\n  render() { \r\n    return (\r\n\t\r\n\r\n\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\r\n\r\n\r\n\t\t\t<div show={this.showGrade} >\r\n\t\t\t  <p>Your grade is {this.getCorrectCount()} out of {this.state.questions.length}. Would you like to <a onClick={()=>this.toggleCheat()}>cheat?</a></p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<QuestionsPanel questions={this.state.questions} currentQuestionNumber = {this.state.currentQuestionNumber} disabled={this.state.graded} cheating={this.state.cheating}\r\n\t\t\t\t\t\t\tsaveQuestionState={this.saveQuestionState}  setCurrentQuestion={this.setCurrentQuestion} gradeTheExam = {this.gradeTheExam} />\r\n\r\n\t\t\t<QuestionJumperPanel setCurrentQuestion={this.setCurrentQuestion} questions={this.state.questions}/>\r\n\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t    <div>\r\n\t\t\t\t  \t\t\t\t<button className=\"btn btn-primary\" type=\"submit\" onClick={() => this.save()}>Save</button>\r\n                </div>\r\n\r\n\t\t\t</div>\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default Exam;","import * as React from \"react\";\r\nimport { Routes, Route, Outlet, Link } from \"react-router-dom\";\r\n\r\nimport Exam from './Components/Exam';\r\nimport QuestionEntry from './Components/QuestionEntry';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Layout />}>\r\n          <Route index element={<Home />} />\r\n          <Route path=\"about\" element={<About />} />\r\n          <Route path=\"dashboard\" element={<Dashboard />} />\r\n\r\n          {/* Using path=\"*\"\" means \"match anything\", so this route\r\n                acts like a catch-all for URLs that we don't have explicit\r\n                routes for. */}\r\n          <Route path=\"*\" element={<NoMatch />} />\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Layout() {\r\n  return (\r\n    <div>\r\n      {/* A \"layout route\" is a good place to put markup you want to\r\n          share across all the pages on your site, like navigation. */}\r\n<Link to=\"/\">Entry Form</Link> | <Link to=\"/about\">Exam</Link>\r\n\r\n\r\n      <hr />\r\n\r\n      {/* An <Outlet> renders whatever child route is currently active,\r\n          so you can think about this <Outlet> as a placeholder for\r\n          the child routes we defined above. */}\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <QuestionEntry/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <Exam/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div>\r\n      Dashboard\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div>\r\n      Nothing to see here!\r\n      <p>\r\n        <Link to=\"/\">Go to the home page</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Exam from './Components/Exam';\r\nimport QuestionEntry from './Components/QuestionEntry';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n/*\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n  <Exam start=\"25\" end=\"30\"/>    \r\n  </React.StrictMode>\r\n  </BrowserRouter>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n*/\r\n\r\n /*\r\nReactDOM.render(\r\n  <QuestionEntry start=\"25\" end=\"30\"/>,\r\n  document.getElementById('root')\r\n);\r\n*/\r\n\r\n\r\n "],"sourceRoot":""}